syntax="proto3";

import "google/protobuf/timestamp.proto";

package instruments;

option go_package = "github.com/sss-eda/lemi025/instruments/protobuf";

// The controlling service definition.
service Controller {
    rpc GetDataPointAcquiredEvents () returns (stream DataPointAcquiredEvent);
    // Sends a readconfig command
    rpc ReadConfig (ReadConfigCommand) returns (CommandResponse);
    rpc GetConfigReadEvents () returns (stream ConfigReadEvent);
    // Sends a readtime command
    rpc ReadTime (ReadTimeCommand) returns (CommandResponse);
    rpc GetTimeReadEvents () returns (stream TimeReadEvent);
    // Sends a settime command
    rpc SetTime (SetTimeCommand) returns (CommandResponse);
    rpc GetTimeSetEvents () returns (stream TimeSetEvent);
    // Sends a setcoefficients1 command
    rpc SetCoefficients1(SetCoefficients1Command) returns (CommandResponse);
    rpc GetCoefficients1SetEvents () returns (stream Coefficients1SetEvent);
    // Sends a readcoefficients1 command
    rpc ReadCoefficients1(ReadCoefficients1Command) returns (CommandResponse);
    rpc GetCoefficients1ReadEvents () returns (stream Coefficients1ReadEvent);
    // Sends a setcoefficients2 command
    rpc SetCoefficients2(SetCoefficients2Command) returns (CommandResponse);
    rpc GetCoefficients2SetEvents () returns (stream Coefficients2SetEvent);
    // Sends a readcoefficients2 command
    rpc ReadCoefficients2(ReadCoefficients2Command) returns (CommandResponse);
    rpc GetCoefficients2ReadEvents () returns (stream Coefficients2ReadEvent);
    // Sends a readgpsdata command
    rpc ReadGPSData(ReadGPSDataCommand) returns (CommandResponse);
    rpc GetGPSDataReadEvents () returns (stream GPSDataReadEvent);
    // Sends a stopsystem command
    rpc StopSystem(StopSystemCommand) returns (CommandResponse);
    // Sends a startsystem command
    rpc StartSystem(StartSystemCommand) returns (CommandReponse);
    rpc GetSystemStartedEvents () returns (stream SystemStartedEvent);
    // Sends a checkflash command
    rpc CheckFLASH(CheckFLASHCommand) returns (CommandResponse);
    rpc GetFLASHCheckedEvents () returns (stream FLASHCheckedEvent);
    // Sends a setdacx command
    rpc SetDACx(SetDACxCommand) returns (CommandResponse);
    // Sends a setdacy command
    rpc SetDACy(SetDACyCommand) returns (CommandResponse);
    // Sends a setdacz command
    rpc SetDACz(SetDACzCommand) returns (CommandResponse);
}

message DataPointAcquiredEvent {
    uint32 station_number = 1;
    google.protobuf.Timestamp time = 2;
    int32 tf = 3;
    int32 te = 4;
    int32 dac_x = 5;
    int32 dac_y = 6;
    int32 dac_z = 7;
    int32 bx_dac = 8;
    int32 by_dac = 9;
    int32 bz_dac = 10;
    repeated Reading readings = 11;
    Mode mode = 12;
    uint32 flash_free = 13;
    uint32 voltage_uin = 14;
    GPSStatus gps_status = 15;
}

message CommandResponse {
    repeated Error errors = 1;
}

message Error {
    google.protobuf.Timestamp timestamp = 1;
    string error = 2;
    string message = 3;
    string detail = 4;
    string help = 5;
}

message ReadConfigCommand {}

message ConfigReadEvent {
    uint32 station_number = 1;
}

message ReadTimeCommand {}

message TimeReadEvent {
    google.protobuf.Timestamp time = 1;
}

message SetTimeCommand {
    google.protobuf.Timestamp time = 1;
}

message TimeSetEvent {
    google.protobuf.Timestamp time = 1;
}

message SetCoefficients1Command {
    Mode mode = 1;
}

message Coefficients1SetEvent {
    Mode mode = 1;
}

message ReadCoefficients1Command {}

message Coefficients1ReadEvent {
    Mode mode = 1;
    uint32 uin_10 = 2;
    Mode1 mode1 = 3;
}

message SetCoefficients2Command {
    Coefficients2 coefficients2 = 1;
}

message Coefficients2SetEvent {}

message ReadCoefficients2Command {}

message Coefficients2ReadEvent {
    Coefficients2 coefficients2 = 1;
}

message ReadGPSDataCommand {}

message GPSDataReadEvent {
    Coordinates coordinates = 1;
}

message Coordinates {
    bytes Latitude = 1;
    bytes Longitude = 2;
    bytes Altitude = 3;
}

message StopSystemCommand {}

message StartSystemCommand {}

message SystemStartedEvent {}

message CheckFLASHCommand {}

message FLASHCheckedEvent {
    uint32 size = 1;
    uint32 free = 2;
}

message SetDACxCommand {
    in32 dac_x = 1;
}

message SetDACyCommand {
    in32 dac_y = 1;
}

message SetDACzCommand {
    in32 dac_z = 1;
}

enum Mode {
    FLASH = 1;
    PC = 2;
    FLASH_PC = 3;
}

enum Mode1 {
    MENU = 1;
    RECORD = 2;
}

enum GPSStatus {
    ACTIVE = 1;
    PASSIVE = 2;
    NO_ANTENNA = 3;
    SHORT_CIRCUIT = 4;
}

message Coefficients2 {
    float ax1 = 1;
    float ay1 = 2;
    float az1 = 3;
    float beta = 4;
    float gamma = 5;
    float xi = 6;
    float exy = 7;
    float eyz = 8;
    float exz = 9;
    float k1x = 10;
    float k1y = 11;
    float k1z = 12;
    float k2x = 13;
    float k2y = 14;
    float k2z = 15;
    float ktf = 16;
    float kte = 17;
    float ktf0 = 18;
    float kte0 = 19;
    float kvbat = 20;
}